# Global configuration for all development environment modules
modules:
  # ZSH Configuration
  zsh:
    enabled: true
    theme: "powerlevel10k/powerlevel10k"
    paths:
      custom_dir: "$HOME/.oh-my-zsh/custom"
      plugins_dir: "$HOME/.oh-my-zsh/custom/plugins"
      themes_dir: "$HOME/.oh-my-zsh/custom/themes"
      completions_dir: "$HOME/.oh-my-zsh/custom/completions"
    plugins:
      - git
      - docker
      - kubectl
      - conda-zsh-completion
      - docker-zsh-completion
      - zsh-autosuggestions
      - zsh-syntax-highlighting
      - zsh-completions
      - python
      - pip
      - node
      - npm
    custom_plugins:
      zsh-autosuggestions: "https://github.com/zsh-users/zsh-autosuggestions"
      zsh-syntax-highlighting: "https://github.com/zsh-users/zsh-syntax-highlighting"
      zsh-completions: "https://github.com/zsh-users/zsh-completions"
      conda-zsh-completion: "https://github.com/esc/conda-zsh-completion"
      docker-zsh-completion: "https://github.com/greymd/docker-zsh-completion"
    fonts:
      source: "https://github.com/romkatv/powerlevel10k-media/raw/master"
      names:
        - "MesloLGS NF Regular.ttf"
        - "MesloLGS NF Bold.ttf"
        - "MesloLGS NF Italic.ttf"
        - "MesloLGS NF Bold Italic.ttf"
      install_path: "$HOME/.local/share/fonts"

  # VSCode Configuration  
  vscode:
    enabled: true
    package:
      name: "code"
      repositories:
        rpm:
          key_url: "https://packages.microsoft.com/keys/microsoft.asc"
          repo_file: "/etc/yum.repos.d/vscode.repo"
          repo_config: |
            [code]
            name=Visual Studio Code
            baseurl=https://packages.microsoft.com/yumrepos/vscode
            enabled=1
            gpgcheck=1
            gpgkey=https://packages.microsoft.com/keys/microsoft.asc
        deb:
          key_url: "https://packages.microsoft.com/keys/microsoft.asc"
          key_path: "/etc/apt/trusted.gpg.d/packages.microsoft.gpg"
          repo_file: "/etc/apt/sources.list.d/vscode.list"
          repo_config: "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main"
    paths:
      config_dir: "$HOME/.config/Code/User"
      extensions_dir: "$HOME/.vscode/extensions"
    settings:
      editor:
        - key: "workbench.colorTheme"
          value: "Default High Contrast"
        - key: "terminal.integrated.defaultProfile.linux"
          value: "zsh"
        - key: "terminal.integrated.profiles.linux.zsh.path"
          value: "/bin/zsh"
        - key: "terminal.integrated.profiles.linux.zsh.args"
          value: ["-l"]
    extensions:
      development:
        - id: "ms-vscode.cpptools"
          required: true
        - id: "ms-vscode.cpptools-extension-pack"
          required: true
        - id: "ms-vscode.cpptools-themes"
          required: false
      build:
        - id: "twxs.cmake"
          required: true
        - id: "ms-vscode.cmake-tools"
          required: true
      containers:
        - id: "ms-vscode-remote.remote-containers"
          required: true
        - id: "ms-azuretools.vscode-docker"
          required: true
      web:
        - id: "william-voyek.vscode-nginx"
          required: false
      python:
        - id: "ms-python.vscode-pylance"
          required: true
        - id: "ms-python.python"
          required: true

  # Docker Configuration
  docker:
    enabled: true
    package:
      name: "docker-ce"
      components:
        - "docker-ce"
        - "docker-ce-cli"
        - "containerd.io"
    repositories:
      rpm:
        repo_url: "https://download.docker.com/linux/centos/docker-ce.repo"
      deb:
        key_url: "https://download.docker.com/linux/ubuntu/gpg"
        key_path: "/usr/share/keyrings/docker-archive-keyring.gpg"
        repo_file: "/etc/apt/sources.list.d/docker.list"
        repo_config: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {release} stable"
    paths:
      config_dir: "/etc/docker"
      daemon_config: "/etc/docker/daemon.json"
    daemon_config:
      resources:
        memory:
          swap: "1G"
          limit: "8G"
        cpu:
          shares: 1024
      logging:
        driver: "json-file"
        options:
          max_size: "10m"
          max_files: "3"
    user_groups:
      - "docker"
    service:
      name: "docker"
      enabled: true
      restart: true

  # Conda Configuration
  conda:
    enabled: true
    installer:
      url: "https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"
      path: "/tmp/miniconda_installer.sh"
    paths:
      root: "$HOME/miniconda3"
      envs: "$HOME/.conda/envs"
      packages: "$HOME/Development/packages"
      pkg_build: "$HOME/Development/packages/build"
      pkg_dist: "$HOME/Development/packages/dist"
    base_config:
      channels:
        - conda-forge
        - defaults
      channel_priority: strict
      solver: libmamba
      pip_interop_enabled: true
      auto_activate_base: false
      always_yes: false
      notify_outdated_conda: true
    environments:
      cpp:
        name: "cpp"
        packages:
          build:
            - compilers
            - cmake
            - make
            - ninja
            - ccache
          debug:
            - gdb
          libraries:
            - boost-cpp
            - eigen
            - fmt
            - spdlog
            - nlohmann_json
          testing:
            - catch2
            - benchmark
          docs:
            - doxygen
      python:
        name: "python"
        packages:
          core:
            - python=3.11
            - pip
            - ipython
            - jupyter
          scientific:
            - numpy
            - pandas
            - scipy
            - matplotlib
            - seaborn
            - scikit-learn
          development:
            - pytest
            - black
            - flake8
            - mypy
          docs:
            - sphinx
          build:
            - conda-build
            - conda-verify
      ml:
        name: "ml"
        packages:
          core:
            - python=3.11
            - pip
          frameworks:
            - tensorflow
            - pytorch
            - torchvision
          compute:
            - cudatoolkit
            - cupy
          scientific:
            - numpy
            - pandas
            - scikit-learn
            - matplotlib
            - seaborn
          tools:
            - jupyter
            - tensorboard
    templates:
      cpp:
        path: "$HOME/Development/packages/templates/cpp"
        files:
          - "meta.yaml"
          - "CMakeLists.txt"
      python:
        path: "$HOME/Development/packages/templates/python"
        files:
          - "meta.yaml"
          - "setup.py"
          - "pyproject.toml"
  backup:
      enabled: true
      paths:
        root: "$HOME/.devenv/backups"
      retention_days: 30
      items:
        - git: "$HOME/.gitconfig"
        - zsh: "$HOME/.zshrc,$HOME/.p10k.zsh"
        - vscode: "$HOME/.config/Code/User/settings.json,$HOME/.config/Code/User/keybindings.json"
        - conda: "$HOME/.condarc"
        - docker: "$HOME/.docker/config.json"
        - ssh: "$HOME/.ssh/config"
        - gnupg: "$HOME/.gnupg/gpg.conf,$HOME/.gnupg/gpg-agent.conf"
